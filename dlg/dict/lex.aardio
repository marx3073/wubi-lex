//RUNAS//
import fonts.fontAwesome;
import win.ui.menu;
import win.ui;
/*DSG{{*/
var winform = win.form(text="wubiLex - 码表管理";right=977;bottom=602;bgcolor=16777215)
winform.add(
btnAddFile={cls="plus";text="添加码表";left=31;top=12;right=192;bottom=45;align="left";bgcolor=11580047;dl=1;dt=1;font=LOGFONT(h=-16;name='FontAwesome');iconStyle={align="left";font=LOGFONT(h=-16;name='FontAwesome');padding={left=15}};iconText='\uF271';notify=1;tabstop=1;textPadding={left=39};z=1};
btnConvert={cls="plus";text="精简码表";left=677;top=560;right=812;bottom=596;align="left";bgcolor=11580047;db=1;dr=1;font=LOGFONT(h=-16;name='FontAwesome');iconStyle={align="left";font=LOGFONT(h=-16;name='FontAwesome');padding={left=15}};iconText='\uF03A';notify=1;tabstop=1;textPadding={left=39};z=8};
btnCopyToSystem={cls="plus";text="安装到系统码表";left=201;top=12;right=394;bottom=45;align="left";bgcolor=11580047;disabled=1;dl=1;dt=1;font=LOGFONT(h=-16;name='FontAwesome');iconStyle={align="left";font=LOGFONT(h=-16;name='FontAwesome');padding={left=15}};iconText='\uF17A ';notify=1;tabstop=1;textPadding={left=39};z=2};
btnSave={cls="plus";text="存为码表";left=825;top=561;right=960;bottom=597;align="left";bgcolor=11580047;db=1;dr=1;font=LOGFONT(h=-16;name='FontAwesome');iconStyle={align="left";font=LOGFONT(h=-16;name='FontAwesome');padding={left=15}};iconText='\uF0C7';notify=1;tabstop=1;textPadding={left=39};z=7};
btnSearch={cls="plus";text='\uF002';left=604;top=569;right=633;bottom=592;color=3947580;db=1;dr=1;font=LOGFONT(h=-16;name='FontAwesome');iconColor=2960685;notify=1;z=5};
ddChar1={cls="plus";text="仅保留单字";left=677;top=373;right=877;bottom=404;align="left";bgcolor=-6960024;border={color=-9920564;radius=1;width=1};font=LOGFONT(h=-15);notify=1;tabstop=1;textPadding={left=20};z=10};
ddChar2={cls="plus";text="仅保留单字、双字词";left=677;top=404;right=877;bottom=435;align="left";bgcolor=-6960024;border={color=-9920564;radius=1;width=1};font=LOGFONT(h=-15);notify=1;tabstop=1;textPadding={left=20};z=9};
ddGb2312={cls="plus";text="仅保留 GB2312 常用汉字";left=677;top=497;right=877;bottom=528;align="left";bgcolor=-6960024;border={color=-9920564;radius=1;width=1};font=LOGFONT(h=-15);notify=1;tabstop=1;textPadding={left=20};z=12};
ddSimplified={cls="plus";text="一字一码 ( 出简不出全 )";left=677;top=435;right=877;bottom=466;align="left";bgcolor=-6960024;border={color=-9920564;radius=1;width=1};font=LOGFONT(h=-15);notify=1;tabstop=1;textPadding={left=20};z=13};
ddSimplized={cls="plus";text="移除繁体字";left=677;top=528;right=877;bottom=559;align="left";bgcolor=-6960024;border={color=-9920564;radius=1;width=1};font=LOGFONT(h=-15);notify=1;tabstop=1;textPadding={left=20};z=11};
ddUnique={cls="plus";text="一码一词 ( 不限单字 )";left=676;top=466;right=876;bottom=497;align="left";bgcolor=-6960024;border={color=-9920564;radius=1;width=1};font=LOGFONT(h=-15);notify=1;tabstop=1;textPadding={left=20};z=15};
editLex={cls="edit";left=281;top=59;right=969;bottom=556;db=1;dl=1;dr=1;dt=1;edge=1;font=LOGFONT(h=-16);multiline=1;vscroll=1;z=6};
editSearch={cls="plus";left=330;top=566;right=595;bottom=590;align="right";border={bottom=1;color=-8355712};db=1;dl=1;dr=1;editable=1;font=LOGFONT(h=-16);z=14};
lbTip={cls="plus";left=410;top=15;right=946;bottom=49;color=2960685;font=LOGFONT(h=-16;name='FontAwesome');z=4};
listbox={cls="listbox";left=11;top=59;right=275;bottom=595;db=1;dl=1;dt=1;edge=1;font=LOGFONT(h=-16);items={};vscroll=1;z=3}
)
/*}}*/

import fsys;
import fsys.dlg;
import wubi.lexFile;
import win.inputBox;
import win.dlg.message;
import sevenZip.lzma;
import config;

var downloadDictFile = function(url,lexName){
	
	var lexPath = fsys.appdata("/aardio/std/wubi-lex-files/"+lexName+".lex");
	io.createDir(fsys.appdata("/aardio/std/wubi-lex-files/"))
	
	if( string.startWith(url,"http://",true) ){
		var downBox = inet.downBox(winform,"下载码表:" + lexName,1000) 
		
		if((string.endWith(url,".lex.lzma",true))){
			downBox.endProc = function(){
				downBox.text = "正在解压缩:" + lexName + ".lex"; 
			
				var processed = 0;
				var step = downBox.contentLength / 1000;
				downBox.progress.setProgressRange(1,1000);  
				downBox.progress.hide = false;
				
				var peekMsg = ..win.peekPumpMessage;
				var ret = ..sevenZip.lzma.decodeFile(lexPath + ".lzma",lexPath,function(inProcessed,outProcessed){ 
					if( (peekMsg()!==null) && downBox.continueModal ){
			 			processed = processed + inProcessed; 
			 			downBox.progress.progressPos = processed / step;
					}
					else {
						return true;
					}
				} ); 
				
				if(!ret){
					downBox.complete = false;
					downBox.endModal(); 
					return;
				}  
			}			
		}

	
		if( downBox.download(url,lexPath + ".lzma") ){
			
			var file = ..io.open(lexPath,"rb");
			if(!file){
				winform.msgboxErr(`错误的码表文件`)
				return;
			}
			
			if( file.read(#"imscwubi")!=="imscwubi"){
				winform.msgboxErr(`错误的码表文件`)
				file.close();
				return;
			}
		
			file.close(); 
			config.lex.files[lexName] = lexPath;
			config.saveAll();
			return lexPath;
		}
	}
}

var addDictFile = function(inputPath){
	if(!inputPath || ..fsys.isDir(inputPath)){ return; }
	var lexName;
	while(true){
		var inputBox = win.inputBox(winform)
		inputBox.text = "wubiLex - 添加码表"
		inputBox.info.text = "请为码表指定一个友好名称"
		inputBox.input.text = !(string.startWith(inputPath,"http://",true))
			?io.splitpath(inputPath).name:"";
		
		lexName = inputBox.doModal()
		if(!#lexName){
			return;
		}
			
		if(!fsys.path.validName(lexName)){
			winform.msgboxErr(`名称不能包含空格、回车、换行、以及 / : * ? " < > ] 等字符`)
			continue ;
		}
			
		if(config.lex.files[lexName]){
			winform.msgboxErr(`此名称已经存在，请重新指定`)
			continue ;
		}
	
		break ;
	}	
	
	var lexPath = io.appData("/aardio/std/wubi-lex-files/"+lexName+".lex");
	io.createDir(io.appData("/aardio/std/wubi-lex-files/"))
	
	if( string.startWith(inputPath,"http://",true) ){
		lexPath = inputPath;
	}
	elseif(string.endWith(inputPath,".txt",true)){
		..win.invoke(
			function(winform,inputPath,lexPath){
				import wubi.lexFile;
				var wubiLex = wubi.lexFile(inputPath)
				if(!wubiLex){
					winform.msgboxErr(`错误的码表文件`)
					return;
				}
				wubiLex.saveLex(lexPath)	
				
			},winform,inputPath,lexPath
		)
	}
	elseif(string.endWith(inputPath,".csv",true)){
		..win.invoke(
			function(winform,inputPath,lexPath){ 
				import string.database;
				import fsys.codepage;
				var db = string.database(',','"');
				var str = fsys.codepage.load(inputPath);
				var data = db.parse(str); 
				
				if(#data){ 
					if(type(data[1])!=type.table 
						|| type(data[1][1])!=type.string
						|| !string.match(data[1][1],"^[a-z]+$")
						){
						winform.msgboxErr("CSV文件未包含五笔码表","wubiLex")
						
						winform.editLex.readonly = false;
						winform.btnConvert.disabledText = null;
						return;
					}
					else {
						import wubi.lexFile;
						var wubiLex = wubi.lexFile(""); 
						wubiLex.setTableData(data);  
						wubiLex.saveLex(lexPath)
					}
				}
				else {
					winform.msgboxErr("CSV文件未包含五笔码表","wubiLex")	
				}
				
			},winform,inputPath,lexPath
		)
	}
	elseif(string.endWith(inputPath,".lex.lzma",true)){
		sevenZip.lzma.decodeFile(inputPath,lexPath);
		var file = ..io.open(lexPath,"rb");
		if(!file){
			winform.msgboxErr(`错误的码表文件`)
			return;
		}
		
		if( file.read(#"imscwubi")!=="imscwubi"){
			file.close();
			winform.msgboxErr(`错误的码表文件`)
			return;
		}
		
		file.close()
	}
	else {
		var file = ..io.open(inputPath,"rb");
		if(!file){
			winform.msgboxErr(`错误的码表文件`)
			return;
		}
		
		if( file.read(#"imscwubi")!=="imscwubi"){
			file.close();
			winform.msgboxErr(`错误的码表文件`)
			return;
		}
		
		file.close()
		
		fsys.copy(inputPath,lexPath);
	}
	
	if(
		string.startWith(inputPath,"http://",true)
		|| ..io.exist(lexPath) ){
			
		config.lex.files[lexName] = lexPath;
		table.push(config.lex.names,lexName);
		config.saveAll();
		
		winform.listbox.reloadLexList(); 		
	}
	
	
}


winform.btnAddFile.oncommand = function(id,event){
    winform.btnAddFile.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
	var inputPath = fsys.dlg.open("二进制码表(*.lex);文本码表(*.txt,*.csv)|*.lex;*.txt;*.csv||",,,winform)
	addDictFile(inputPath)
	winform.btnAddFile.disabledText = null;
}

import process.admin;
process.admin.enableDropMsg(winform.hwnd);
winform.onDropFiles = function(files){
    winform.btnAddFile.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
	addDictFile(files[1])
	winform.btnAddFile.disabledText = null;
}

import app;
app.loadDefaultLexFiles();

winform.listbox.onSelChange = function(){ 
	winform.lbTip.text = "";
	var selIndex = winform.listbox.selIndex;
	winform.btnCopyToSystem.disabled = selIndex<=1 
}

import inet.downBox
winform.listbox.wndproc = function(hwnd,message,wParam,lParam){
	select( message ) {   
		case 0x205/*_WM_RBUTTONUP*/{
			winform.lbTip.text = "";
			var x,y = win.getMessagePos();  
			var selIndex = winform.listbox.hitTest(x,y,true); 
			if( selIndex  ){
				winform.listbox.selIndex = selIndex; 
				
				winform.popmenu = win.ui.popmenu(winform); 
				if(selIndex>1){	
					winform.btnCopyToSystem.disabled = false;
					
					var lexName = config.lex.names[selIndex-1];
					var lexPath = config.lex.files[lexName];
					
					if( string.startWith(lexPath,"http://",true) ){
						winform.popmenu.add('自服务器下载安装此码表',function(id){ 
							downloadDictFile(lexPath,lexName);
						} ) 
						
						winform.popmenu.add('删除',function(id){ 
							winform.listbox.delete(selIndex)
							
							var lexName = config.lex.names[selIndex-1];
							if(lexName){
								config.lex.files[lexName] = null;
								table.remove(config.lex.names,selIndex-1)
							}
						} ) 	
							
						winform.popmenu.popup(x,y,true)
						return;
					}
					
					
					winform.popmenu.add('删除',function(id){ 
						winform.listbox.delete(selIndex)
						
						var lexName = config.lex.names[selIndex-1];
						if(lexName){
							var lexPath = config.lex.files[lexName];
							if(lexPath){
								io.remove(lexPath)
								config.lex.files[lexName] = null;
							}
							table.remove(config.lex.names,selIndex-1)
						}
					} ) 
					
					winform.popmenu.add('安装到系统码表',function(id){ 
						winform.btnCopyToSystem.oncommand();
					} )  				
				}
				else {
					winform.btnCopyToSystem.disabled = true;
				}
				
				if(selIndex>1){
					winform.popmenu.add();
					
					winform.popmenu.add('编辑码表',function(id){  
						winform.lbTip.text = "正在加载码表数据，可能需要数分钟..."
						winform.lbTip.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
					 	winform.editLex.readonly = true;
					 	
						var lexName = config.lex.names[selIndex-1];
						if(lexName){
							var lexPath = config.lex.files[lexName];
							
							thread.invoke( 
								function(winform,lexPath){
									import wubi.lexFile; 
									var wubiLex = wubi.lexFile(lexPath); 
									winform.editLex.text = wubiLex.tostring();
									
									statistics = wubiLex.statistics();
									
									winform.editLex.readonly = false;
									winform.lbTip.disabledText = null;
									winform.lbTip.text = string.format("总编码数：%d 重码数：%d"
										,statistics.totalTxt,statistics.coincidentTxt );
								},winform,lexPath
							)
						} 
					} ) 
				} 
				else {
					winform.popmenu.add('编辑码表',function(id){  
						winform.lbTip.text = "正在加载数据";
						winform.lbTip.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
					 	winform.editLex.readonly = true;
					 	
						thread.invoke( 
							function(winform){
								import wubi.lexFile; 
								var wubiLex = wubi.lexFile(); 
								winform.editLex.text = wubiLex.tostring();
								statistics = wubiLex.statistics();
								
								winform.editLex.readonly = false;
								winform.lbTip.disabledText = null;
								winform.lbTip.text = string.format("总编码数：%d 重码数：%d"
									,statistics.totalTxt,statistics.coincidentTxt );
							},winform
						) 
					} ) 
					
					winform.popmenu.add();
				}
				
				
				winform.popmenu.add();
				
				winform.popmenu.add('导出文本格式码表',function(id){ 
					import process;
					var outputPath = fsys.dlg.save("文本码表（*.txt）|*.txt||",,,winform)
					if(!outputPath){
						return;
					}
					
					winform.lbTip.text = "正在导出数据"
		
					if(selIndex>1){
						var lexName = config.lex.names[selIndex-1];
						if(lexName){
							var lexPath = config.lex.files[lexName];
							var wubiLex = wubi.lexFile(lexPath)
							
							wubiLex.saveTxt(outputPath) 
						} 
					}
					else {
						var wubiLex = wubi.lexFile()
						wubiLex.saveTxt(outputPath) 
					}
					
					winform.lbTip.disabledText = null;
					winform.lbTip.text = "已完成";
				} );
				
				winform.popmenu.add("导出到CSV(UTF-8)文件",
					function(id){
						
						var csvPath = fsys.dlg.save("*.csv|*.csv","保存编辑器文本到CSV(UTF-8)文件",,winform)
						if(csvPath){ 
							var lexPath;
							if(selIndex>1){
								var lexName = config.lex.names[selIndex-1];
								if(lexName){ lexPath = config.lex.files[lexName]; }
							}
							
							thread.invoke( 
								function(winform,csvPath,lexPath){
									winform.lbTip.text = "正在导出CSV文件"
									winform.lbTip.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
									
									import wubi.lexFile;
									var wubiLex = wubi.lexFile(lexPath); 
									var data = wubiLex.getTableData();
									
									import string.database;
									var db = string.database(',','"'); 
									string.save(csvPath,'\xEF\xBB\xBF' )
									string.save(csvPath,db.stringify(data),true)
									
									winform.lbTip.disabledText = null;
									winform.lbTip.text = "";
								},winform,csvPath,lexPath
							)	 
						}
					} 
				)
				
				if(selIndex>1){
					winform.popmenu.add('导出 lzma 压缩码表',function(id){ 
						import process;
						var outputPath = fsys.dlg.save("压缩码表（*.lex.lzma）|*.lex.lzma||",,,winform)
						if(!outputPath){
							return;
						}
						
						winform.lbTip.text = "正在导出压缩码表"
						var lexName = config.lex.names[selIndex-1];
					
						if(lexName){
							var lexPath = config.lex.files[lexName];
							sevenZip.lzma.encodeFile(lexPath,outputPath); 
						} 
						
						winform.lbTip.disabledText = null;
						winform.lbTip.text = "已完成";
					} );
				}

				winform.popmenu.add('浏览码表文件...',function(id){ 
					import process;
					if(selIndex>1){
						var lexName = config.lex.names[selIndex-1];
						if(lexName){
							var lexPath = config.lex.files[lexName]; 
							process.exploreSelect(lexPath)
						}
					}
					else {
						process.exploreSelect(wubi.lexFile.path()) 
					}
				} ) 
				winform.popmenu.popup(x,y,true)
			}
			else {
				winform.popmenu = win.ui.popmenu(winform); 
				winform.popmenu.add('重置为默认列表',function(id){
					var msgDlg = win.dlg.message(winform)
					if(!msgDlg.ask('是否重置当前列表?\n点击确定将清空所有添加或下载的码表，\n并加载默认列表。')){
						return;
					}
					
					for(selIndex=winform.listbox.count;2;-1){ 
						winform.listbox.delete(selIndex)
						
						var lexName = config.lex.names[selIndex-1];
						if(lexName){
							var lexPath = config.lex.files[lexName];
							if(lexPath){
								io.remove(lexPath)
								config.lex.files[lexName] = null;
							}
							table.remove(config.lex.names,selIndex-1)
						} 
					}
					
					app.loadDefaultLexFiles();
					winform.listbox.reloadLexList(); 
					
				} ) 
				
				winform.popmenu.add('添加本地码表文件',function(id){
					winform.btnAddFile.oncommand();
				} ) 
				
				winform.popmenu.add('添加网络码表',function(id){
					var inputBox = win.inputBox(winform)
					inputBox.text = "wubiLex - 添加码表网络地址"
					inputBox.info.text = "请指定下载码表的网址(支持 *.lex 或 *.lex.lzma格式 )"
					inputBox.input.text = "http://wubi.aardio.com/download/lex/ChsWubi98.lex.lzma";
					
					var lexUrl  = inputBox.doModal()
					if(!#lexUrl){
						return;
					} 
					addDictFile(lexUrl);
				} ) 
					
				winform.popmenu.popup(x,y,true)
			}
			
		} 
	}
}

import tsfUtil;
winform.btnCopyToSystem.oncommand = function(id,event){
	var selIndex = winform.listbox.selIndex; 
	var lexName = config.lex.names[selIndex-1];
	if(lexName){  
		var srcPath = config.lex.files[lexName];
		if( string.startWith(srcPath,"http://",true) ){
			srcPath = downloadDictFile(srcPath,lexName); 
			if(!srcPath)return;
		}
		
		if(!..io.exist(srcPath)){
			var msgDlg = win.dlg.message(winform);
			msgDlg.err("码表路径错误")
			return;
		}
		
		winform.editLex.setFocus(); 					
		winform.btnCopyToSystem.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}  
		var ok,err = win.invoke(copyToSystem,srcPath,winform) 
		publish("wubi.system.lex.changed");
		
		tsfUtil.activate();
		
		winform.lbTip.text = ok?'安装成功，如果不能输入，请按 Alt + Shift 来回切换一下即可': string.concat( "安装失败：",err);
		winform.btnCopyToSystem.disabledText = null; 
	}	
}

copyToSystem = function(srcPath,winform){
	import fsys;
	import service;
	import process;
	import tsfUtil;
	
	return tsfUtil.aclGrant(..fsys.getWinDir("\InputMethod\CHS\ChsWubiNew.lex"),
		function(chsWubiNewPath){
			return tsfUtil.aclGrant(..fsys.getWinDir("\InputMethod\CHS\ChsWubi.lex"),
				function(chsWubiPath){
					import tsfUtil;
					tsfUtil.reset(
						function(){ 
							for(i=1;10;1){
								process.kill("ctfmon.exe")
								process.kill("ChsIME.exe")
								
								if(chsWubiNewPath)fsys.delete(chsWubiNewPath )  
								if(chsWubiPath)fsys.delete(chsWubiPath ) 
								
								if((!io.exist(chsWubiNewPath)) && (!io.exist(chsWubiPath)) ){ break; }  
								sleep(1000)
							}
							
							var lexData = string.load(srcPath);
							if(lexData){
								if(chsWubiNewPath){ string.save(chsWubiNewPath,lexData); }
								if(chsWubiPath){ string.save(chsWubiPath,lexData); }
							}
						}
						
					) 
					return true;
				}
			);		
		}
	);
}

import style
winform.btnAddFile.skin(style.primaryButton)
winform.btnCopyToSystem.skin(style.primaryButton)

winform.listbox.systemLexName = "系统码表";
winform.listbox.reloadLexList = function(){
	winform.listbox.clear();
	
	winform.listbox.add(winform.listbox.systemLexName)
	var lexNames = config.lex.names;
	for(i=1;#lexNames;1){
		winform.listbox.add(lexNames[i])
	} 
} 
winform.listbox.reloadLexList()

import win.debounce;
var updateSystemLexVersion = function(){
	winform.listbox.updateSystemLexVersion = function(ver){
		winform.listbox.systemLexName = "系统码表( " + ver + " )"
		winform.listbox.reloadLexList(); 
	}
	
	thread.invoke( 
		function(winform){
			import wubi.lexFile;
			var wubiLex = wubi.lexFile()
			var ver = wubiLex.getVersion();
			ver = ({["98"]="98版";["86"]="86版";["091"]="09第1版";["06"]="新世纪版"})[ver]; 
			winform.listbox.updateSystemLexVersion(ver)
		},winform
	)
}
updateSystemLexVersion();

subscribe("wubi.system.lex.changed",function(...){
	updateSystemLexVersion() 
} )

winform.editLex.limit = 0;
winform.editLex.text =/*
可拖拽码表文件到当前窗口（不是编辑框）。
可添加二进制码表（*.lex）或文本格式码表（*.txt）
注意：z为通配键不能用于码表(但是可以在短语词库中参与编码)

文本格式码表支持 UTF-8,UNICODE(UTF-16) 等各种编码，
码表每行一个编码，按键(小写字母)与输入文本间用空格或制表符分开。
不符合格式要求的行（例如行首有标点、空白行）都会自动忽略：
下面的写法都是支持的：
------------------------------------------------------------

aaaa 工 㠭
戈 a 
节 ab
atn 可以用%20表示空格，%09表示制表符，%0A表示换行
// 行首是任意标点即为注释

试试 用鼠标选中 这些 没有指定编码的文本 
然后在右键菜单点击 使用选定码表造词 
*/

winform.editLex.translateAccelerator = function(msg){ 
    var vk = msg.wParam;
 	if( vk == 0x9/*_VK_TAB*/ ){
		if( msg.message == 0x100/*_WM_KEYDOWN*/) {
			winform.editLex.selText = '\t'; 
			return true;
		}
	}	
}

winform.btnSave.skin(style.button);
winform.btnSave.oncommand = function(id,event){
	if(!#winform.editLex.text){
		winform.msgboxErr("要保存的码表内容不能为空!")
		return;
	}
	
	var lexName;
	while(true){
		var inputBox = win.inputBox(winform)
		inputBox.text = "wubiLex - 保存码表"
		inputBox.info.text = "请为码表指定一个友好名称"
		
		lexName = inputBox.doModal()
		if(!#lexName){
			return;
		}
			
		if(!fsys.path.validName(lexName)){
			winform.msgboxErr(`名称不能包含空格、回车、换行、以及 / : * ? " < > ] 等字符`)
			continue ;
		}
			
		if(config.lex.files[lexName]){
			winform.msgboxErr(`此名称已经存在，请重新指定`)
			continue ;
		}
	
		break ;
	}	
		
	var lexPath = fsys.appdata("/aardio/std/wubi-lex-files/"+lexName+".lex");
	io.createDir(fsys.appdata("/aardio/std/wubi-lex-files/")) 
	io.remove(lexPath);
	
	config.lex.files[lexName] = lexPath;
	table.push(config.lex.names,lexName);
	config.saveAll();
		 
	thread.invoke( 
		function(winform,lexPath){
			import wubi.lexFile; 
			winform.btnSave.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
			var wubiLex = wubi.lexFile("") 
			wubiLex.addText(winform.editLex.text);
			wubiLex.saveLex(lexPath)
			
			winform.listbox.reloadLexList(); 
				
			sleep(500);
			winform.btnSave.disabledText = null;	
		},winform,lexPath
	)
}

import win.ui.tabs;
var menu = win.ui.tabs(winform.ddChar1,winform.ddChar2
	,winform.ddSimplized,winform.ddUnique,winform.ddGb2312,winform.ddSimplified)
menu.skin({
	background={
		default=0xFF68CC95;
		disabled=0xFFC4CCC8;
		hover=0xFF4A522F;
	};
	color={
		default=0xFF000000;
		disabled=0xFF8A8A8A;
		hover=0xFFFFFFFF
	};
})
menu.initPopup();

winform.btnConvert.skin(style.button)
winform.btnConvert.oncommand = function(id,event){
    menu.popup(true,winform.btnConvert,"up");
}

menu.onOk = function(strip){ 
	strip.oncommand();
}

winform.ddChar1.oncommand = function(){
	if(!#winform.editLex.text){
		winform.msgboxErr("要转换的码表内容不能为空!")
		return;
	}
			
	thread.invoke( 
		function(winform){
			winform.btnConvert.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
			winform.editLex.readonly = true;
			
			import wubi.lexFile;
			var wubiLex = wubi.lexFile("");
			wubiLex.addText(winform.editLex.text);
			
			var lenStr = ..string.len;			
			wubiLex.filter(
				function(txt,code){
					return lenStr(txt)==1;
				}
			)
				
			statistics = wubiLex.statistics();	
			winform.lbTip.text = string.format("总编码数：%d 重码数：%d",statistics.totalTxt,statistics.coincidentTxt );
			winform.editLex.text = wubiLex.tostring();
			winform.editLex.readonly = false;
			sleep(500)
			
			winform.btnConvert.disabledText = null;
		},winform
	)
}

winform.ddChar2.oncommand = function(){
	if(!#winform.editLex.text){
		winform.msgboxErr("要转换的码表内容不能为空!")
		return;
	}
			
	thread.invoke( 
		function(winform){
			winform.btnConvert.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
			winform.editLex.readonly = true;
			
			import wubi.lexFile;
			var wubiLex = wubi.lexFile("");
			wubiLex.addText(winform.editLex.text);
			
			var lenStr = ..string.len;				
			wubiLex.filter(
				function(txt,code){
					return lenStr(txt)<=2;
				}
			)
				
			statistics = wubiLex.statistics();	
			winform.lbTip.text = string.format("总编码数：%d 重码数：%d",statistics.totalTxt,statistics.coincidentTxt );
			winform.editLex.text = wubiLex.tostring();
			winform.editLex.readonly = false;
			sleep(500)
			
			winform.btnConvert.disabledText = null;
		},winform
	)	
}

winform.ddSimplized.oncommand = function(id,event){
	if(!#winform.editLex.text){
		winform.msgboxErr("要转换的码表内容不能为空!")
		return;
	}
			
	thread.invoke( 
		function(winform){
			winform.btnConvert.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
			winform.editLex.readonly = true;
			
			import wubi.lexFile;
			var wubiLex = wubi.lexFile("");
			wubiLex.addText(winform.editLex.text);
					
			import string.conv;	
			wubiLex.filter(
				function(txt,code){
					return ..string.conv.simplized(txt)===txt;
				}
			)
				
			statistics = wubiLex.statistics();	
			winform.lbTip.text = string.format("总编码数：%d 重码数：%d",statistics.totalTxt,statistics.coincidentTxt );
			winform.editLex.text = wubiLex.tostring();
			winform.editLex.readonly = false;
			sleep(500)
			
			winform.btnConvert.disabledText = null;
		},winform
	)		
}

winform.ddUnique.oncommand = function(id,event){
	if(!#winform.editLex.text){
		winform.msgboxErr("要转换的码表内容不能为空!")
		return;
	}

	thread.invoke( 
		function(winform){
			winform.btnConvert.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
			winform.editLex.readonly = true;
			
			import wubi.lexFile;
			var wubiLex = wubi.lexFile("");
			wubiLex.addText(winform.editLex.text);
			wubiLex.unique();
			
			statistics = wubiLex.statistics();	
			winform.lbTip.text = string.format("总编码数：%d 重码数：%d",statistics.totalTxt,statistics.coincidentTxt );
			winform.editLex.text = wubiLex.tostring();
			winform.editLex.readonly = false;
			sleep(500)
			
			winform.btnConvert.disabledText = null;
		},winform
	)		
}

winform.ddGb2312.oncommand = function(id,event){
	if(!#winform.editLex.text){
		winform.msgboxErr("要转换的码表内容不能为空!")
		return;
	}
			
	thread.invoke( 
		function(winform){
			winform.btnConvert.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
			winform.editLex.readonly = true;
			
			import wubi.lexFile;
			var wubiLex = wubi.lexFile("");
			wubiLex.addText(winform.editLex.text);
					
			import string.conv;	
			wubiLex.filter(
				function(txt,code){
					txt = string.fromto(txt,65001,936);
					return (txt[1]>=0xB0 && txt[1]<=0xF7 && txt[2]>=0xA1 && txt[2]<=0xFE);
				}
			)
			
			statistics = wubiLex.statistics();	
			winform.lbTip.text = string.format("总编码数：%d 重码数：%d",statistics.totalTxt,statistics.coincidentTxt )
			winform.editLex.text = wubiLex.tostring();
			winform.editLex.readonly = false;
			sleep(500)
			
			winform.btnConvert.disabledText = null;
		},winform
	)	
}

winform.ddSimplified.oncommand = function(id,event){
	if(!#winform.editLex.text){
		winform.msgboxErr("要转换的码表内容不能为空!")
		return;
	}
			
	thread.invoke( 
		function(winform){
			winform.btnConvert.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
			winform.editLex.readonly = true;
			
			import wubi.lexFile;
			var wubiLex = wubi.lexFile("");
			wubiLex.addText(winform.editLex.text);
					
			import string.conv;	
			wubiLex.simplified();
			
			statistics = wubiLex.statistics();	
			winform.lbTip.text = string.format("总编码数：%d 重码数：%d 单字仅保留最简编码",statistics.totalTxt,statistics.coincidentTxt )
			winform.editLex.text = wubiLex.tostring();
			winform.editLex.readonly = false;
			sleep(500)
			
			winform.btnConvert.disabledText = null;
		},winform
	)
}

var createMenuItems = function(){
     
	return {
    	{ /*---分隔线---*/ };
		{ winform.editLex.canCopy()?
			("使用" + (winform.listbox.selIndex>1 ? "选定码表" : "系统码表") + "造词") :"造词( 请选择词组,多个用空格分开 )";
			function(id){
				var lexPath,lexName;
				var selIndex = winform.listbox.selIndex;
				if(selIndex>1){
					lexName = config.lex.names[selIndex-1];
					lexPath = config.lex.files[lexName];
				}
			
				thread.invoke( 
					function(winform,lexPath,lexName){
						winform.lbTip.text = "正在造词"
						winform.lbTip.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
						winform.editLex.readonly = true;
						
						import wubi.lexFile;
						var lexFile = wubi.lexFile(lexPath)
						if(lexFile.isEmpty()){
							winform.editLex.showErrorTip("",(lexName:"系统码表")+"不能为空")
							winform.lbTip.disabledText = null;
							winform.lbTip.text = "";
							return;
						}
						
						var result = {}
						var selText = winform.editLex.selText;
						var push = ..table.push;
						for txt in string.gmatch(selText,":+") { 
							
			    			var code = lexFile.combineCode(txt);
			    			if(code){
			    				push(result,code + '\t' + txt);
			    			}
						}
						
						result = ..string.join(result,'\r\n');
						
						winform.editLex.readonly = false;
						winform.editLex.selText = result; 
						
						winform.lbTip.disabledText = null;
						winform.lbTip.text = ""
						
						
					},winform,lexPath,lexName
				)
			} ; lambda()!winform.editLex.canCopy() ? 1/*_MF_GRAYED*/ : 0
		};
		
				
		{ /*---分隔线---*/ };
		{ "转换格式";{ 
			{ "编码在前 / 词组在后";
				function(id){  
					thread.invoke( 
						function(winform){
							winform.lbTip.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
							winform.editLex.readonly = true;
							
							import wubi.lexFile;
							var wubiLex = wubi.lexFile("");
							wubiLex.addText(winform.editLex.text);
							winform.editLex.text = wubiLex.tostring(false);
							
							var statistics = wubiLex.statistics(); 
							winform.lbTip.disabledText = null;
							winform.editLex.readonly = false;
							
							winform.lbTip.text = string.format("总编码数：%d 重码数：%d",statistics.totalTxt,statistics.coincidentTxt )
						},winform
					)	 
				}
			} 
			{ "编码在前 / 词组在后 / 一码一行";
				function(id){  
					thread.invoke( 
						function(winform){
							winform.lbTip.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
							winform.editLex.readonly = true;
							
							import wubi.lexFile;
							var wubiLex = wubi.lexFile("");
							wubiLex.addText(winform.editLex.text);
							winform.editLex.text = wubiLex.tostring(false,true);
							
							var statistics = wubiLex.statistics(); 
							winform.lbTip.disabledText = null;
							winform.editLex.readonly = false;
							
							winform.lbTip.text = string.format("总编码数：%d 重码数：%d",statistics.totalTxt,statistics.coincidentTxt )
						},winform
					)	 
				}
			} 
			{ "词组在前 / 编码在后";
				function(id){  
					thread.invoke( 
						function(winform){
							winform.lbTip.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
							winform.editLex.readonly = true;
							
							import wubi.lexFile;
							var wubiLex = wubi.lexFile("");
							wubiLex.addText(winform.editLex.text);
							winform.editLex.text = wubiLex.tostring(true);
							
							var statistics = wubiLex.statistics(); 
							winform.lbTip.disabledText = null;
							winform.editLex.readonly = false;
							
							winform.lbTip.text = string.format("总编码数：%d 重码数：%d",statistics.totalTxt,statistics.coincidentTxt )
						},winform
					)	 
				}
			}
		}}
		{ "简繁转换";{ 
			{ "转为繁体字";
				function(id){ 
					thread.invoke( 
						function(winform){
							winform.btnConvert.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
							winform.editLex.readonly = true;
				 			
							import string.conv;
							var str = string.conv.traditionalized(winform.editLex.text);
					 		
							winform.editLex.text = str;
							winform.editLex.readonly = false;
							sleep(500)
							
							winform.btnConvert.disabledText = null;
						},winform
					)	 
				} 
			};
			{ "转为简体字";
				function(id){ 
					thread.invoke( 
						function(winform){
							winform.btnConvert.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
							winform.editLex.readonly = true;
				 			
							import string.conv;
							var str = string.conv.simplized(winform.editLex.text);
					 		
							winform.editLex.text = str;
							winform.editLex.readonly = false;
							sleep(500)
							
							winform.btnConvert.disabledText = null;
						},winform
					)	 
				} 
			};
		}}
		
    	{ "精简码表";{ 
			{ "仅保留单字";
				function(id){
					winform.ddChar1.oncommand();
				} 
			};
			
			{ "仅保留单字、双字词";
				function(id){
					winform.ddChar2.oncommand();
				} 
			};
			
			{ "仅保留 GB2312 常用汉字";
				function(id){
					winform.ddGb2312.oncommand();
				} 
			};
			
			{ "移除繁体字";
				function(id){
					winform.ddSimplized.oncommand();
				} 
			};
			
			{ "一字一码 ( 出简不出全 )";
				function(id){
					winform.ddGb2312.oncommand();
				} 
			};
			
			{ "一码一词 ( 不限单字 )";
				function(id){
					winform.ddUnique.oncommand();
				} 
			};
		}}
		
		{ /*---分隔线---*/ };
		{
			"另存为文本文件";
			function(id){
				var path = fsys.dlg.save("*.txt|*.txt||","保存编辑器文本到文件",,winform)
				if(path)string.save(path,winform.editLex.text )
			} 
		};
		{
			"打开文本文件";
			function(id){
				var path = fsys.dlg.open("*.txt|*.txt|","打开文件",,winform)
				if(path) {
					import fsys.codepage;
					winform.editLex.text = fsys.codepage.load(path);  
				}
			} 
		};
		{ "统计";
			function(id){
				thread.invoke( 
					function(winform){
						winform.lbTip.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
						winform.editLex.readonly = true;
						
						import wubi.lexFile;
						var wubiLex = wubi.lexFile("");
						wubiLex.addText(winform.editLex.text);
						
						var statistics = wubiLex.statistics(); 
						winform.lbTip.disabledText = null;
						winform.editLex.readonly = false;
						
						winform.lbTip.text = string.format("总编码数：%d 重码数：%d",statistics.totalTxt,statistics.coincidentTxt )
					},winform
				)	
		
			} 
		};
	}	
}


winform.editLex.enablePopMenu(createMenuItems)

import ustring;
winform.btnSearch.oncommand = function(id,event){
	
	var min,max = winform.editLex.getsel();
	if(max) min = max; 
	
	var txt = string.toUnicode(winform.editLex.text);
	var kw = string.toUnicode(string.trim(winform.editSearch.text));
	 
	var i,j = ustring.indexOf(txt,kw,min+1);
	if((!(i&&j)) && (min>0)){
		i,j =  ustring.indexOf(txt,kw,0);
	}
	
	if(i&&j){
		winform.editLex.setsel(i,j);
		winform.editLex.scrollCaret();
	}
}

winform.editSearch.editBox.onOk = function(){ 
    winform.btnSearch.oncommand();
    return true; 	
}

winform.btnSearch.skin( style.plainButton );
winform.editSearch.setCueBannerText("请输入查找文本")

winform.show() 
win.loopMessage();