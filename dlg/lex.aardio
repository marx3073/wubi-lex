//RUNAS//
import fonts.fontAwesome;
import win.ui;
/*DSG{{*/
var winform = win.form(text="五笔码表管理﻿工具";right=1040;bottom=607;bgcolor=16777215)
winform.add(
bkplus={cls="bkplus";left=0;top=304;right=1041;bottom=608;bgcolor=16777215;db=1;dl=1;dr=1;forecolor=15780518;linearGradient=90;z=3};
btnAddFile={cls="plus";text="添加码表";left=26;top=17;right=187;bottom=53;align="left";bgcolor=11580047;dl=1;dt=1;font=LOGFONT(h=-16;name='FontAwesome');iconStyle={align="left";font=LOGFONT(h=-16;name='FontAwesome');padding={left=15}};iconText='\uF271';notify=1;tabstop=1;textPadding={left=39};z=1};
btnConvert={cls="plus";text="精简码表";left=748;top=564;right=883;bottom=600;align="left";bgcolor=11580047;db=1;dr=1;font=LOGFONT(h=-16;name='FontAwesome');iconStyle={align="left";font=LOGFONT(h=-16;name='FontAwesome');padding={left=15}};iconText='\uF03A';notify=1;tabstop=1;textPadding={left=39};z=8};
btnCopyToSystem={cls="plus";text="安装到系统码表";left=196;top=17;right=389;bottom=53;align="left";bgcolor=11580047;disabled=1;dl=1;dt=1;font=LOGFONT(h=-16;name='FontAwesome');iconStyle={align="left";font=LOGFONT(h=-16;name='FontAwesome');padding={left=15}};iconText='\uF17A ';notify=1;tabstop=1;textPadding={left=39};z=2};
btnSave={cls="plus";text="另存为";left=896;top=565;right=1014;bottom=601;align="left";bgcolor=11580047;db=1;dr=1;font=LOGFONT(h=-16;name='FontAwesome');iconStyle={align="left";font=LOGFONT(h=-16;name='FontAwesome');padding={left=15}};iconText='\uF0C7';notify=1;tabstop=1;textPadding={left=39};z=7};
ddChar1={cls="plus";text="仅保留单字";left=748;top=606;right=932;bottom=637;align="left";bgcolor=-6960024;border={color=-9920564;radius=1;width=1};font=LOGFONT(h=-15);notify=1;tabstop=1;textPadding={left=20};z=10};
ddChar2={cls="plus";text="仅保留单字、双字词";left=748;top=637;right=932;bottom=668;align="left";bgcolor=-6960024;border={color=-9920564;radius=1;width=1};font=LOGFONT(h=-15);notify=1;tabstop=1;textPadding={left=20};z=9};
ddSimplized={cls="plus";text="移除繁体字";left=748;top=668;right=932;bottom=699;align="left";bgcolor=-6960024;border={color=-9920564;radius=1;width=1};font=LOGFONT(h=-15);notify=1;tabstop=1;textPadding={left=20};z=11};
lbTip={cls="plus";left=414;top=27;right=1009;bottom=61;color=2960685;font=LOGFONT(h=-16;name='FontAwesome');z=5};
listbox={cls="listbox";left=28;top=79;right=398;bottom=599;db=1;dl=1;dt=1;edge=1;font=LOGFONT(h=-16);items={};vscroll=1;z=4};
richedit={cls="richedit";left=408;top=77;right=1025;bottom=561;db=1;dl=1;dr=1;dt=1;edge=1;font=LOGFONT(h=-15);multiline=1;vscroll=1;z=6}
)
/*}}*/

import fsys;
import fsys.dlg;
import fsys.wubiLex;
import win.inputBox;
import config;

var downloadDictFile = function(url,lexName){
	
	var lexPath = fsys.appdata("/aardio/std/wubi-lex-files/"+lexName+".lex");
	io.createDir(fsys.appdata("/aardio/std/wubi-lex-files/"))
	
	if( string.startWith(url,"http://",true) && (string.endWith(url,".lex",true))){
		var downBox = inet.downBox(winform,"下载码表:" + lexName,1000) 
		if( downBox.download(url,lexPath) ){
			var file = ..io.open(lexPath,"rb");
			if(!file){
				winform.msgboxErr(`错误的码表文件`)
				return;
			}
			
			if( file.read(#"imscwubi")!=="imscwubi"){
				winform.msgboxErr(`错误的码表文件`)
				file.close();
				return;
			}
		
			file.close(); 
			config.lex.files[lexName] = lexPath;
			config.saveAll();
			return lexPath;
		}
	}
}


var addDictFile = function(inputPath){
	if(!inputPath || ..fsys.isDir(inputPath)){ return; }
	
	var lexName;
	while(true){
		var inputBox = win.inputBox(winform)
		inputBox.text = "五笔码表管理﻿工具"
		inputBox.info.text = "请为码表指定一个友好名称"
		
		lexName = inputBox.doModal()
		if(!#lexName){
			return;
		}
			
		if(!fsys.path.validName(lexName)){
			winform.msgboxErr(`名称不能包含空格、回车、换行、以及 / : * ? " < > ] 等字符`)
			continue ;
		}
			
		if(config.lex.files[lexName]){
			winform.msgboxErr(`此名称已经存在，请重新指定`)
			continue ;
		}
	
		break ;
	}	
	
	var lexPath = fsys.appdata("/aardio/std/wubi-lex-files/"+lexName+".lex");
	io.createDir(fsys.appdata("/aardio/std/wubi-lex-files/"))
	
	if( string.startWith(inputPath,"http://",true) && (string.endWith(inputPath,".lex",true))){
		var downBox = inet.downBox(winform,"下载码表:" + lexName) 
		if( downBox.download(inputPath,lexPath) ){
			var file = ..io.open(inputPath,"rb");
			if(!file){
				winform.msgboxErr(`错误的码表文件`)
				return;
			}
			
			if( file.read(#"imscwubi")!=="imscwubi"){
				file.close();
				winform.msgboxErr(`错误的码表文件`)
				return;
			}
		
			file.close();
			
			config.lex.files[lexName] = lexPath;
			config.saveAll();
			return;
		}
	}
	
	if(string.endWith(inputPath,".txt",true)){
		var wubiLex = fsys.wubiLex(inputPath)
		if(!wubiLex){
			winform.msgboxErr(`错误的码表文件`)
			return;
		}
		wubiLex.saveLex(lexPath)		
	}
	else {
		var file = ..io.open(inputPath,"rb");
		if(!file){
			winform.msgboxErr(`错误的码表文件`)
			return;
		}
		
		if( file.read(#"imscwubi")!=="imscwubi"){
			winform.msgboxErr(`错误的码表文件`)
			return;
		}
		
		file.close()
		
		fsys.copy(inputPath,lexPath);
	}
	
	
	config.lex.files[lexName] = lexPath;
	table.push(config.lex.names,lexName);
	config.saveAll();
	
	winform.listbox.reloadLexList(); 	
}


winform.btnAddFile.oncommand = function(id,event){
	var inputPath = fsys.dlg.open("二进制码表(*.lex);文本码表(*.txt)|*.lex;*.txt||",,,winform)
	addDictFile(inputPath)
}

import process.admin;
process.admin.enableDropMsg(winform.hwnd);
winform.onDropFiles = function(files){
	addDictFile(files[1])
}
	
if(!#config.lex.names){
	
	config.lex.files["五笔98"] = "http://wubi.aardio.com/download/lex/ChsWubi98.lex";
	table.push(config.lex.names,"五笔98");
	
	config.lex.files["五笔86"] = "http://wubi.aardio.com/download/lex/ChsWubi86.lex";
	table.push(config.lex.names,"五笔86");
	
	config.saveAll();
}


winform.listbox.onSelChange = function(){ 
	winform.lbTip.text = "";
	var item = winform.listbox.selIndex;
	winform.btnCopyToSystem.disabled = item<=1 
}

import inet.downBox
winform.listbox.wndproc = function(hwnd,message,wParam,lParam){
	select( message ) {   
		case 0x205/*_WM_RBUTTONUP*/{
			winform.lbTip.text = "";
			var x,y = win.getMessagePos();  
			var item = winform.listbox.hitTest(x,y,true); 
			if( item  ){
				winform.listbox.selIndex = item; 
				
				winform.popmenu = win.ui.popmenu(winform); 
				if(item>1){	
					winform.btnCopyToSystem.disabled = false;
					
					var lexName = config.lex.names[item-1];
					var lexPath = config.lex.files[lexName];
					
					if( string.startWith(lexPath,"http://",true) ){
						winform.popmenu.add('自服务器下载安装此码表',function(id){ 
							downloadDictFile(lexPath,lexName);
						} ) 	
						
						winform.popmenu.popup(x,y,true)
						return;
					}
					
					
					winform.popmenu.add('删除',function(id){ 
						var selIndex = winform.listbox.selIndex;
						winform.listbox.delete(selIndex)
						
						var lexName = config.lex.names[selIndex-1];
						if(lexName){
							var lexPath = config.lex.files[lexName];
							if(lexPath){
								io.remove(lexPath)
								config.lex.files[lexName] = null;
							}
							table.remove(config.lex.names,selIndex-1)
						}
					} ) 
					
					winform.popmenu.add('安装到系统码表',function(id){ 
						winform.btnCopyToSystem.oncommand();
					} )  				
				}
				else {
					winform.btnCopyToSystem.disabled = true;
				}
				
				if(item>1){
					winform.popmenu.add();
					
					winform.popmenu.add('编辑码表',function(id){  
						winform.lbTip.text = "正在加载数据"
						
						var lexName = config.lex.names[winform.listbox.selIndex-1];
						if(lexName){
							var lexPath = config.lex.files[lexName];
							var wubiLex = fsys.wubiLex(lexPath);
							
							thread.invoke( 
								function(winform,lexPath){
									import fsys.wubiLex; 
									var wubiLex = fsys.wubiLex(lexPath); 
									winform.richedit.text = wubiLex.tostring();
								},winform,lexPath
							)
						}  
						
						winform.lbTip.disabledText = null;
						winform.lbTip.text = ""
					} ) 
				} 
				
				winform.popmenu.add();
				
				winform.popmenu.add('导出文本格式码表',function(id){ 
					import process;
					var outputPath = fsys.dlg.save("文本码表（*.txt）|*.txt||",,,winform)
					if(!outputPath){
						return;
					}
					
					winform.lbTip.text = "正在导出数据"
		
					if(item>1){
						var lexName = config.lex.names[winform.listbox.selIndex-1];
						if(lexName){
							var lexPath = config.lex.files[lexName];
							var wubiLex = fsys.wubiLex(lexPath)
							
							wubiLex.saveTxt(outputPath) 
						} 
					}
					else {
						var wubiLex = fsys.wubiLex()
						wubiLex.saveTxt(outputPath) 
					}
					
					winform.lbTip.disabledText = null;
					winform.lbTip.text = "已完成";
				} );

				winform.popmenu.add('浏览码表文件...',function(id){ 
					import process;
					if(item>1){
						var lexName = config.lex.names[winform.listbox.selIndex-1];
						if(lexName){
							var lexPath = config.lex.files[lexName]; 
							process.exploreSelect(lexPath)
						}
					}
					else {
						process.exploreSelect(fsys.wubiLex.path()) 
					}
				} ) 
				winform.popmenu.popup(x,y,true)
			}
		} 
	}
}

import tsfUtil;
winform.btnCopyToSystem.oncommand = function(id,event){
	var selIndex = winform.listbox.selIndex; 
	var lexName = config.lex.names[selIndex-1];
	if(lexName){  
		var srcPath = config.lex.files[lexName];
		if( string.startWith(srcPath,"http://",true) ){
			srcPath = downloadDictFile(srcPath,lexName); 
			if(!srcPath)return;
		}
		
		winform.richedit.setFocus(); 					
		winform.btnCopyToSystem.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}  
		var ok,err = win.invoke(copyToSystem,srcPath,winform) 
		publish("wubi.system.lex.changed");
		
		tsfUtil.activate();
		
		winform.lbTip.text = ok?'安装成功，如果不能输入，请按 Alt + Shift 来回切换一下即可': string.concat( "安装失败：",err);
		winform.btnCopyToSystem.disabledText = null; 
	}	
}

copyToSystem = function(srcPath,winform){
	import fsys;
	import service;
	import process;
	import tsfUtil;
	
	return tsfUtil.aclGrant(..fsys.getWinDir("\InputMethod\CHS\ChsWubiNew.lex"),
		function(chsWubiNewPath){
			return tsfUtil.aclGrant(..fsys.getWinDir("\InputMethod\CHS\ChsWubi.lex"),
				function(chsWubiPath){
					import tsfUtil;
					tsfUtil.reset(
						function(){ 
							for(i=1;10;1){
								process.kill("ctfmon.exe")
								process.kill("ChsIME.exe")
								
								if(chsWubiNewPath)fsys.delete(chsWubiNewPath )  
								if(chsWubiPath)fsys.delete(chsWubiPath ) 
								
								if((!io.exist(chsWubiNewPath)) && (!io.exist(chsWubiPath)) ){ break; }  
								sleep(1000)
							}
							
							var lexData = string.load(srcPath);
							if(chsWubiNewPath){ string.save(chsWubiNewPath,lexData); }
							if(chsWubiPath){ string.save(chsWubiPath,lexData); }
						}
						
					) 
					return true;
				}
			);		
		}
	);
}

import style
winform.btnAddFile.skin(style.primaryButton)
winform.btnCopyToSystem.skin(style.primaryButton)

winform.listbox.systemLexName = "系统码表";
winform.listbox.reloadLexList = function(){
	winform.listbox.clear();
	
	winform.listbox.add(winform.listbox.systemLexName)
	var lexNames = config.lex.names;
	for(i=1;#lexNames;1){
		winform.listbox.add(lexNames[i])
	} 
} 
winform.listbox.reloadLexList()

import win.debounce;
var updateSystemLexVersion = function(){
	winform.listbox.updateSystemLexVersion = function(ver){
		winform.listbox.systemLexName = "系统码表( " + ver + " )"
		winform.listbox.reloadLexList(); 
	}
	
	thread.invoke( 
		function(winform){
			import fsys.wubiLex;
			var wubiLex = fsys.wubiLex()
			var ver = wubiLex.getVersion();
			ver = ({["98"]="98版";["86"]="86版";["06"]="新世纪版"})[ver]; 
			winform.listbox.updateSystemLexVersion(ver)
		},winform
	)
}
updateSystemLexVersion();

subscribe("wubi.system.lex.changed",function(...){
	updateSystemLexVersion() 
} )

winform.richedit.text =/*
可直接拖拽码表文件到当前窗口来添加码表。
可添加微软五笔二进制码表（*.lex），也可以添加文本格式的码表（*.txt）

文本格式码表可自动识别 UTF-8,UNICODE(UTF-16) 等各种编码，
码表每行一个编码，按键组合(小写字母)与输入文本间用空格或制表符分开。
下面的写法都是支持的，任何不符合格式要求的行都会自动忽略：
------------------------------
aaaa 工 㠭
戈 a 
节 ab
atn 薛
// 这是任性的注释行
*/

winform.btnSave.skin(style.button);
winform.btnSave.oncommand = function(id,event){
	if(!#winform.richedit.text){
		winform.msgboxErr("要保存的码表内容不能为空!")
		return;
	}
	
	var lexName;
	while(true){
		var inputBox = win.inputBox(winform)
		inputBox.text = "五笔码表管理﻿工具"
		inputBox.info.text = "请为码表指定一个友好名称"
		
		lexName = inputBox.doModal()
		if(!#lexName){
			return;
		}
			
		if(!fsys.path.validName(lexName)){
			winform.msgboxErr(`名称不能包含空格、回车、换行、以及 / : * ? " < > ] 等字符`)
			continue ;
		}
			
		if(config.lex.files[lexName]){
			winform.msgboxErr(`此名称已经存在，请重新指定`)
			continue ;
		}
	
		break ;
	}	
	
	var lexPath = fsys.appdata("/aardio/std/wubi-lex-files/"+lexName+".lex");
	io.createDir(fsys.appdata("/aardio/std/wubi-lex-files/")) 
	io.remove(lexPath);
	
	config.lex.files[lexName] = lexPath;
	table.push(config.lex.names,lexName);
	config.saveAll();
		 
	thread.invoke( 
		function(winform){
			import fsys.wubiLex; 
			winform.btnSave.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
			var wubiLex = fsys.wubiLex("") 
			wubiLex.addText(winform.richedit.text);
			wubiLex.saveLex(lexPath)
			
			winform.listbox.reloadLexList(); 
				
			sleep(500);
			winform.btnSave.disabledText = null;	
		},winform
	)
}

import win.ui.tabs;
var menu = win.ui.tabs(winform.ddChar1,winform.ddChar2,winform.ddSimplized)
menu.skin({
	background={
		default=0xFF68CC95;
		disabled=0xFFC4CCC8;
		hover=0xFF4A522F;
	};
	color={
		default=0xFF000000;
		disabled=0xFF8A8A8A;
		hover=0xFFFFFFFF
	};
})
menu.initPopup();


winform.btnConvert.skin(style.button)
winform.btnConvert.oncommand = function(id,event){
    menu.popup(true);
}

menu.onOk = function(strip){ 
	strip.oncommand();
}

winform.ddChar1.oncommand = function(){
	if(!#winform.richedit.text){
		winform.msgboxErr("要转换的码表内容不能为空!")
		return;
	}
			
	thread.invoke( 
		function(winform){
			winform.btnConvert.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
			winform.richedit.disabled = true;
			
			import fsys.wubiLex;
			var wubiLex = fsys.wubiLex("");
			wubiLex.addText(winform.richedit.text);
						
			wubiLex.filter(
				function(txt,code){
					return ..string.len(txt)==1;
				}
			)
				
			winform.richedit.text = wubiLex.tostring();
			winform.richedit.disabled = false;
			sleep(500)
			
			winform.btnConvert.disabledText = null;
		},winform
	)
}

winform.ddChar2.oncommand = function(){
	if(!#winform.richedit.text){
		winform.msgboxErr("要转换的码表内容不能为空!")
		return;
	}
			
	thread.invoke( 
		function(winform){
			winform.btnConvert.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
			winform.richedit.disabled = true;
			
			import fsys.wubiLex;
			var wubiLex = fsys.wubiLex("");
			wubiLex.addText(winform.richedit.text);
						
			wubiLex.filter(
				function(txt,code){
					return ..string.len(txt)<=2;
				}
			)
				
			winform.richedit.text = wubiLex.tostring();
			winform.richedit.disabled = false;
			sleep(500)
			
			winform.btnConvert.disabledText = null;
		},winform
	)	
}

winform.ddSimplized.oncommand = function(id,event){
	if(!#winform.richedit.text){
		winform.msgboxErr("要转换的码表内容不能为空!")
		return;
	}
			
	thread.invoke( 
		function(winform){
			winform.btnConvert.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
			winform.richedit.disabled = true;
			
			import fsys.wubiLex;
			var wubiLex = fsys.wubiLex("");
			wubiLex.addText(winform.richedit.text);
					
			import string.conv;	
			wubiLex.filter(
				function(txt,code){
					return ..string.conv.simplized(txt)===txt;
				}
			)
				
			winform.richedit.text = wubiLex.tostring();
			winform.richedit.disabled = false;
			sleep(500)
			
			winform.btnConvert.disabledText = null;
		},winform
	)		
}

winform.richedit.enablePopMenu({
    { /*---分隔线---*/ };
	{ "仅保留单字";
		function(id){
			winform.ddChar1.oncommand();
		} 
	};
	
	{ "仅保留单字、双字词";
		function(id){
			winform.ddChar2.oncommand();
		} 
	};
	{ "移除繁体字";
		function(id){
			winform.ddSimplized.oncommand();
		} 
	};
})

winform.show() 
win.loopMessage();